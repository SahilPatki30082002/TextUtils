{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","role","onClick","toggle","for","toggleSwitchText","TextForm","useState","text","setText","style","color","htmlFor","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","i","split","forEach","element","edited_sentence","trim","slice","length","document","getElementById","select","navigator","clipboard","writeText","join","Alert","alert","word","lower","charAt","capitalize","msg","prototypes","PropTypes","string","defaultProps","App","setMode","modeText","setModeText","setAlert","bgColor","setBgColor","message","setTimeout","body","changeColorBg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa4f301f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">About</a>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-blue\"></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-red\" ></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-yellow\" ></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-green\" ></button>\r\n                    {/* <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-blue\" onClick={props.changeColorBg('blue')}></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-red\" onClick={props.changeColorBg('red')}></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-yellow\" onClick={props.changeColorBg('yellow')}></button>\r\n                    <button type=\"button\" class=\"btn rounded-circle mx-3 btn-color-green\" onClick={props.changeColorBg('green')}></button> */}\r\n                    <div class=\"form-check form-switch\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}/>\r\n                            <label class={`form-check-label text-${(props.mode==='light')?'dark':'light'}`} for=\"flexSwitchCheckDefault\">{props.toggleSwitchText}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = { title: PropTypes.string }\r\n\r\nNavbar.defaultProps = { title: 'Set your title here' }","import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Changed to Upper Case\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Changed to Lower Case\",\"success\");\r\n    }\r\n    const handleLClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        var newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Handled\",\"success\");\r\n    }\r\n    const handleSentenceClick = ()=>{\r\n        let newText = \"\";\r\n        let i=0;\r\n        text.split(\".\").forEach(element => {\r\n            i++;\r\n            element = element.trim();\r\n            let first_char = element[0].toUpperCase();\r\n            let edited_sentence = first_char + element.slice(1);\r\n            if (i!==1) {\r\n                newText = newText + \". \" + edited_sentence;  \r\n            }\r\n            else if(i === text.split(\".\").length){\r\n                newText = newText + edited_sentence + \".\"\r\n            }\r\n            else{\r\n                newText = newText + edited_sentence \r\n            }\r\n        });\r\n        setText(newText);\r\n    }\r\n    // const count_words = (sentance)=>{\r\n    //     let sen = sentance.spilt(\" \");\r\n    //     return typeof(sen);\r\n    // }\r\n\r\n    const [text, setText] = useState(\"Enter your text here\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style = {{color: props.mode === \"dark\"?\"white\":\"#212529\"}}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"><h1>{props.title}</h1></label>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value = {text} onChange={handleOnChange} style = {{backgroundColor: props.mode === \"light\"?\"white\":\"#212529\", color: props.mode === \"dark\"?\"white\":\"#212529\"}}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleUpClick}>Upper case</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleLoClick}>Lower case</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleLClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleSentenceClick}>Sentance Case</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleCopy}>Copy</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick = {handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container\">\r\n            <h3>Your text Sumarry</h3>\r\n            {/* <p>{count_words(text)} words and {text.length} characters.</p> */}\r\n            <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h3>Text Preview</h3>\r\n            <p>{text.length?text:\"Enter text in the above text box to preview it here ;)\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.prototypes = {title: PropTypes.string}\r\nTextForm.defaultProps = {title: \"Enter your text below\"}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return (lower.charAt(0).toUpperCase() + lower.slice(1))\r\n    }\r\n\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [modeText, setModeText] = useState('Enable Dark Mode');\n  const [alert, setAlert] = useState(null);\n  const [bgColor, setBgColor] = useState('white');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const changeColorBg = (color) => {\n    setBgColor(color);\n    document.body.style.backgroundColor = `${bgColor}`;\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setModeText('Enable Light Mode');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      setModeText('Enable Dark Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n    // setInterval(() => {\n    //   document.title = \"Haakuna\";\n    // }, 1500);\n  \n    // setInterval(() => {\n    //   document.title = \"Matata\";\n    // }, 2000);\n  \n  return (\n    <>\n      {/* < Router > */}\n        <Navbar title=\"TextUtils\" mode={mode} toggle={toggleMode} toggleSwitchText={modeText} changeColorBg={changeColorBg} />\n        <Alert alert={alert} />\n        {/* <About/> */}\n        {/* <Switch>/ */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} title=\"Enter your text\" mode={mode} />\n          {/* </Route> */}\n        {/* // </Switch> */}\n        {/* // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}